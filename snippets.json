{
    "DATA": {
    "prefix": "data",
    "description": "DATA: and PROCEDURE: headers",
    "body": [
        "DATA:\n$1\n\nPROCEDURE:\n$2"
    ]
    },
    "PROCEDURE": {
        "prefix": "pro",
        "description": "PROCEDURE: header",
        "body": [
            "PROCEDURE:\n$2"
        ]
    },
    "is": {
        "prefix": "is",
        "description": "var IS type",
        "body": [
            "$1 is $2"
        ]
    },
    "number": {
        "prefix": "n",
        "description": "number type",
        "body": [
            "number"
        ]
    },
    "text": {
        "prefix": "t",
        "description": "text type",
        "body": [
            "text"
        ]
    },
    "number vector": {
        "prefix": "nv",
        "description": "number vector type",
        "body": [
            "number vector"
        ]
    },
    "text vector": {
        "prefix": "tv",
        "description": "text vector type",
        "body": [
            "text vector"
        ]
    },
    "external": {
        "prefix": "ex",
        "description": "external",
        "body": [
            "external"
        ]
    },
    "lookup": {
        "prefix": "at",
        "description": "vector element lookup",
        "body": [
            "$1:$2 "
        ]
    },
    "sub-procedure": {
        "prefix": "sub",
        "description": "sub-procedure definition",
        "body": [
            "sub-procedure $1\n\t$2\nend sub-procedure"
        ]
    },
    "end sub-procedure": {
        "prefix": "ends",
        "description": "end sub-procedure",
        "body": [
            "end sub-procedure"
        ]
    },
    "call external": {
        "prefix": "ce",
        "description": "call external",
        "body": [
            "call external $1"
        ]
    },

    "call sub-procedure": {
        "prefix": "call",
        "description": "call sub-procedure",
        "body": [
            "call $1"
        ]
    },
    "call sub-procedure (old)": {
        "prefix": "cs",
        "description": "call sub-procedure (old)",
        "body": [
            "call sub-procedure $1"
        ]
    },
    "store": {
        "prefix": "st",
        "description": "store x in v",
        "body": [
            "store $1 in $2"
        ]
    },
    "store quote": {
        "prefix": "sq",
        "description": "store quote in x",
        "body": [
            "store quote in $1\nend quote\n"
        ]
    },
    "length": {
        "prefix": "stl",
        "description": "store length of x in v",
        "body": [
            "store length of $1 in $2"
        ]
    },
    "display": {
        "prefix": "dis",
        "description": "display",
        "body": [
            "display $1"
        ]
    },
    "display with crlf": {
        "prefix": "d",
        "description": "display x crlf",
        "body": [
            "display $1 crlf"
        ]
    },
    "crlf": {
        "prefix": "cr",
        "description": "crlf",
        "body": [
            "crlf"
        ]
    },
    "while": {
        "prefix": "while",
        "description": "while loop",
        "body": [
            "while $1 is $2 do\n\t$3\nrepeat"
        ]
    },
    "if": {
        "prefix": "if",
        "description": "if block",
        "body": [
            "if $1 is $2 then\n\t$3\nend if"
        ]
    },
    "if else": {
        "prefix": "ife",
        "description": "if else block",
        "body": [
            "if $1 is $2 then\n\t$3\nelse\n\t$4\nend if"
        ]
    },
    "end if": {
        "prefix": "endif",
        "description": "end if",
        "body": [
            "end if"
        ]
    },
    "equal to": {
        "prefix": "eq",
        "description": "equal to",
        "body": [
            "equal to "
        ]
    },
    "not equal to": {
        "prefix": "neq",
        "description": "not equal to",
        "body": [
            "not equal to "
        ]
    },
    "greater than": {
        "prefix": "gt",
        "description": "greater than",
        "body": [
            "greater than "
        ]
    },
    "greater than or equal to": {
        "prefix": "gte",
        "description": "greater than or equal to",
        "body": [
            "greater than or equal to "
        ]
    },
    "less than": {
        "prefix": "lt",
        "description": "less than ",
        "body": [
            "less than "
        ]
    },
    "less than or equal to": {
        "prefix": "lte",
        "description": "less than or equal to",
        "body": [
            "less than or equal to "
        ]
    },
    "join": {
        "prefix": "join",
        "description": "join x and y in v",
        "body": [
            "join $1 and $2 in $3"
        ]
    },
    "substring": {
        "prefix": "subs",
        "description": "substring s from x length y in z",
        "body": [
            "substring $1 from $2 length $3 in $4"
        ]
    },   
    "count": {
        "prefix": "count",
        "description": "count x from y in n",
        "body": [
            "count $1 from $2 in $3"
        ]
    },    
    "split": {
        "prefix": "split",
        "description": "split x by y in v",
        "body": [
            "split $1 by $2 in $3"
        ]
    },
    "trim": {
        "prefix": "trim",
        "description": "trim x in y",
        "body": [
            "trim $1 in $2"
        ]
    },
    "replace": {
        "prefix": "replace",
        "description": "replace x from y with z in v",
        "body": [
            "replace $1 from $2 with $3 in $4"
        ]
    },
    "add": {
        "prefix": "add",
        "description": "add x and y in v",
        "body": [
            "add $1 and $2 in $3"
        ]
    },
    "incr": {
        "prefix": "incr",
        "description": "increment variable by 1",
        "body": [
            "incr $1"
        ]
    },
    "decr": {
        "prefix": "decr",
        "description": "decrement variable by 1",
        "body": [
            "decr $1"
        ]
    },
    "subtract": {
        "prefix": "subtract",
        "description": "subtract x from y in v",
        "body": [
            "subtract $1 from $2 in $3"
        ]
    },
    "divide": {
        "prefix": "divide",
        "description": "divide x by y in v",
        "body": [
            "divide $1 by $2 in $3"
        ]
    },
    "multiply": {
        "prefix": "multiply",
        "description": "multiply x by y in v",
        "body": [
            "multiply $1 by $2 in $3"
        ]
    },
    "modulo": {
        "prefix": "modulo",
        "description": "modulo x by y in v",
        "body": [
            "modulo $1 by $2 in $3"
        ]
    },
    "random": {
        "prefix": "rand",
        "description": "store random number",
        "body": [
            "store random in $1"
        ]
    },
    "get character": {
        "prefix": "gc",
        "description": "get character from text",
        "body": [
            "get character at $1 from $2 in $3"
        ]
    },
    "get index": {
        "prefix": "gi",
        "description": "get index of",
        "body": [
            "get index of $1 from $2 in $3"
        ]
    },
    "store character": {
        "prefix": "sc",
        "description": "store character from text in var",
        "body": [
            "store character $1 in $2"
        ]
    },
    "store character code": {
        "prefix": "scc",
        "description": "store character code from text in var",
        "body": [
            "store character code of $1 in $2"
        ]
    },
    "execute and store output": {
        "prefix": "exec",
        "description": "execute shell command and store output in var",
        "body": [
            "execute $1 and store output in $2"
        ]
    },
    "execute and store exit code": {
        "prefix": "execc",
        "description": "execute shell command and store exit code",
        "body": [
            "execute $1 and store exit code in $2"
        ]
    },
    "accept": {
        "prefix": "ac",
        "description": "accept",
        "body": [
            "accept $1"
        ]
    },
    "accept until eof": {
        "prefix": "ace",
        "description": "accept input until eof",
        "body": [
            "accept $1 until eof"
        ]
    },
    "load file": {
        "prefix": "load",
        "description": "load file",
        "body": [
            "load file $1 in $2"
        ]
    },
    "write to file": {
        "prefix": "write",
        "description": "write to file",
        "body": [
            "write $1 to file $2"
        ]
    },
    "append to file": {
        "prefix": "append",
        "description": "append to file",
        "body": [
            "append $1 to file $2"
        ]
    },
 
    "wait x milliseconds": {
        "prefix": "wait",
        "description": "wait x milliseconds",
        "body": [
            "wait $1 milliseconds"
        ]
    },

    "goto": {
        "prefix": "go",
        "description": "goto x",
        "body": [
            "goto $1"
        ]
    },

    "label": {
        "prefix": "la",
        "description": "set label for goto",
        "body": [
            "label $1"
        ]
    }
}
