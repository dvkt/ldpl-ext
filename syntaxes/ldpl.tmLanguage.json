{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "LDPL",
	"patterns": [
		{
			"include": "#strings"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.ldpl",
				"match": "(?<=^|[\\s])((?i)procedure:|data:|end if|end sub-procedure|greater than|equal to|less than|break|continue|do|else|external|if|is|not|or|repeat|return|sub-procedure|then|while)(?=\\s|$)"
			},
			{
				"name": "entity.name.function.ldpl",
				"match": "(?<=^|[\\s])((?i)abs|accept|add|append|call sub-procedure|call external|call|ceil|display|divide|execute|exit|file|floor|get character at|get character|goto|join|label|length of|load file|milliseconds|modulo|multiply|store|subtract|wait|write)(?=\\s|$)"
			},
			{
				"name": "storage.type.ldpl",
				"match": "(?<=^|[\\s])((?i)number|text|vector)(?=\\s|$)"
			},
			{
				"name": "entity.name.function.ldpl",
				"match": "(?<=^|\\s)((?i)and|by|from|in|to)(?=\\s|$)"
			},
			{
				"name": "storage.modifier.ldpl",
				"match": "(?<=^|\\s)((?i)crlf|random)(?=\\s|$)"
			},
			{
				"name": "variable.name.ldpl",
				"match": "[A-Za-z]\\w*"
			}
		]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.ldpl",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.ldpl",
							"match": "\\\\."
						}
					]
				},
				{
					"begin": "^\\s*((?i)(store quote in) (\\S+))\\s*$",
					"beginCaptures": {
						"2": {
							"name": "entity.name.function.ldpl"
						},
						"3": {
							"name": "variable.parameter.ldpl"
						}
					},
					"end": "^((?i)\\s*end quote\\s*)$",
					"endCaptures": {
						"0": {
							"name": "entity.name.function.ldpl"
						}
					},
					"patterns": [
						{
							"name": "constant.character.escape.ldpl",
							"match": "\\\\."
						}
					],
					"name": "string.quoted.block.ldpl"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"match": "(?<=^|[\\s:])(-?\\d\\d*(\\.\\d\\d*)?)(?=\\s|$)",
					"name": "constant.numeric.double.ldpl"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"begin": "#",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.ldpl"
						}
					},
					"end": "$",
					"name": "comment.line.ldpl"
				}
			]
		}
	},
	"scopeName": "source.ldpl"
}
